<?php

namespace YajTech\Crud\Services;

use Illuminate\Support\Str;

class CrudOperationMigrationService
{
    public function makeMigration($name, $fields, $module): string
    {
        $migrationFields = $this->generateMigrationFields($fields);

        // Generate migration file name
        $migrationName = date('Y_m_d_His') . '_create_' . Str::snake($name) . '_table.php';
        if ($module) {
            $migrationPath = base_path('Modules/' . $module . '/Database/migrations');
            // Check if the directory exists
            if (!is_dir($migrationPath)) {
                mkdir($migrationPath, 0777, true);
            }
            $migrationPath = $migrationPath . '/' . $migrationName;
        } else {
            $migrationPath = database_path('migrations/' . $migrationName);
        }
        // Generate migration content
        $migrationContent = $this->generateMigrationContent($name, $migrationFields);

        // Save the migration file
        file_put_contents($migrationPath, $migrationContent);

        return $migrationPath;
    }

    protected function generateMigrationFields($fieldsArray): string
    {
        $fields = '';

        foreach ($fieldsArray as $field) {
            [$fieldName, $fieldType] = explode(':', $field);
            $fields .= "\$table->{$fieldType}('{$fieldName}');\n        ";
        }

        return $fields;
    }

    protected function generateMigrationContent($name, $fields): string
    {
        return <<<EOT
    <?php

     use Illuminate\Database\Migrations\Migration;
     use Illuminate\Database\Schema\Blueprint;
     use Illuminate\Support\Facades\Schema;

     return new class extends Migration
     {
        public function up()
        {
        Schema::create('{$name}', function (Blueprint \$table) {
            \$table->id();

             /** columns generated by crud generator */
             $fields

             /** default columns */
            \$table->foreignId('created_by')->nullable();
            \$table->foreignId('updated_by')->nullable();
            \$table->json('extra')->nullable();
            \$table->softDeletes();

            \$table->timestamps();
        });
       }

        public function down()
        {
        Schema::dropIfExists('{$name}');
        }
     };
    EOT;
    }
}
